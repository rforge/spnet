% Generated by roxygen2 (4.0.1): do not edit by hand
\name{debate.pdftotext}
\alias{debate.pdftotext}
\title{Convert a PDF file to a text file}
\usage{
debate.pdftotext(file, backend = "debate.pdftotext", control = c("-layout"),
  lang = "eng")
}
\arguments{
\item{file}{the path of the file which the text have to be extract from.}

\item{backend}{specify the tool to be use for extracting the text. Current options are \code{debate.pdftotext} and \code{tesseract}. See details.}

\item{control}{control parameters to use with \code{debate.pdftotext}. Ignore when using \code{tesseract}.}

\item{lang}{language to use when performing an OCR task (\code{tesseract} option). Language codes are based on ISO 963-2. Please consult the \code{tesseract} website for more information.}
}
\description{
This function extracts text from a PDF file and store it in a character string.
}
\details{
It is not so easy to extract text from a PDF file. The \code{debate.pdftotext} command works well in a lot of cases and is quite efficient. For using this option, the \code{debate.pdftotext} command have to be installed on your system. On most Linux distributions, the command is included as part of the \code{poppler-utils} package. On Windows, the command is included as part of the \code{Xpdf} software (\url{http://www.foolabs.com/xpdf}). Some PDF file can embed complex structures as for example several layers, fonts or forms. Although the PDF is correctly rendered by the PDF viewer, the conversion to text partially fails and a lot of text may be lost or corrupted. To avoid this, a strategy can be to convert the PDF file into a image and then pass it through an Optical Character Recognition (OCR) software. This second option generally achieve better results, but is also more time consuming. The \code{tesseract} option allows to run this strategy using the tesseract OCR. For using this strategy, you first need to install the tesseract OCR. On most linux distributions the software is provided as part of the \code{tesseract-ocr} package. You may also need to install specific language utilities, for example the \code{tesseract-ocr-fra} package for enabling French support. Windows users can download the software from the tesseract website (\url{https://code.google.com/p/tesseract-ocr/}). You also need to install the \code{convert} utility. This utility, part of the \code{imagemagick} software, is used in backend for converting PDF files into images. On most linux distribution the command is included as part of the \code{imagemagick} package. Windows users can download \code{imagemagick} from its official website (\url{http://www.imagemagick.org/}).
}
\examples{
\dontrun{

path.to.pdf <- paste0(path.package("debate"), "/doc/BOACG_Tome_21_article_49.pdf")

mytext1 <- debate.pdftotext(path.to.pdf)

mytext2 <- debate.pdftotext(path.to.pdf, backend = "tesseract", lang = "fra")
# we save the output to avoid running the OCR again
save(mytext2, file = "mytext2.RData")
}
}

